name: Build and Release EXE

permissions:
  contents: write  # Ensure workflow can create releases

on:
  push:
    branches:
      - release
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build the .exe with custom name using PyInstaller
      run: |
        pyinstaller --onefile --name chillout_tester --hidden-import=ping3 main.py

    - name: Upload built .exe as artifact
      uses: actions/upload-artifact@v2
      with:
        name: built-exe
        path: dist/chillout_tester.exe  # Path to the built executable

  release:
    needs: build
    runs-on: ubuntu-latest  # You don't need Windows to create a release

    steps:
    - name: Download built artifact
      uses: actions/download-artifact@v2
      with:
        name: built-exe  # Download the artifact

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v1.0.0
        release_name: Chillout Tester Release v1.0.0
        draft: false
        prerelease: false
      env:
        token: ${{secrets.GT}}


    - name: Upload .exe to GitHub Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chillout_tester.exe  # Use the relative path after downloading
        asset_name: chillout_tester_v1.0.0.exe
        asset_content_type: application/octet-stream